#version 420 core                                                                   
                                                                        
layout (isolines) in;                                                              
                                                                                    
void main(void)                                                                     
{   
	//gl_Position = vec4(gl_TessCoord.x, gl_TessCoord.x, gl_TessCoord.x, 1.0);
#if 1
	//gl_Position = gl_in[0].gl_Position;

	vec4 p0 = gl_in[0].gl_Position;
	vec4 p1 = gl_in[1].gl_Position;
	vec4 p2 = gl_in[2].gl_Position;
	vec4 p3 = gl_in[3].gl_Position;
	float u = gl_TessCoord.x;
	// the basis functions:
	float b0 = (1.-u) * (1.-u) * (1.-u);
	float b1 = 3. * u * (1.-u) * (1.-u);
	float b2 = 3. * u * u * (1.-u);
	float b3 = u * u * u;
	gl_Position = b0*p0 + b1*p1 + b2*p2 + b3*p3;
#else
	float r = (gl_TessCoord.y + gl_TessCoord.x / gl_TessLevelOuter[0]);           
    float t = gl_TessCoord.x * 2.0 * 3.14159;                                    
    gl_Position = vec4(sin(t) * r, cos(t) * r, 0.5, 1.0); 
#endif
 }